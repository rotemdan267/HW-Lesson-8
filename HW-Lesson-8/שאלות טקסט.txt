שיעורי בית Value&Ref Stack&Heap

1. הסבר מה זה:
a. stack
b. heap
c. משתני value Type
d. משתני Reference Type




1. a. המנהל של התכנית הנוכחית. מתחיל מה- Main
אם ה"מיין" שולח אותו לפונקציות נוספות, הוא מפעיל אותם, כאשר הוא תמיד יסיים
את הפונקציה שאליה הוא נשלח ולאחר מכן יחזור לפונקציה ששלחה אותו ויסיים אותה.
יש לו אפשרות גם לשמור בתוכו משתנים עם הערך שלהם.

b. איזור בזיכרון שנשמרים בו ערכים למשתנים, בד"כ מורכבים יותר, לא
בעלי ערך פשוט (כגון "אינט" שמכיל ערך מספרי בודד). 
כל ערך מקבל כתובת, הכתובת נשמרת ב- stack
וכאשר התכנית רוצה לגשת לאותו משתנה היא הולכת לכתובת ולפי הכתובת היא יודעת איפה
לחפש אותו ב-heap

c. נשמרים ב-stack
ביחד עם הערך שלהם

d. בד"כ מכילים ערך מורכב יותר מ-value types
ב-stack
נשמר שם המשתנה והכתובת שלו ב-heap
והערך עצמו נשמר ב-heap

2. תן 4 טיפוסים בהם המערכת שומרת את הערכים שלהם ב-stack...
int
char
bool
float

3. מה המערכת שומרת ב
stack 
לכל שאר הטיפוסים שאינם
value Type?

שם המשתנה, והכתובת ב-heap

4. האם המערכת שומרת ב
stack 
את הכתובת או את הערכים של המערך? ומה קורה אם זה מערך של 
int?

את הכתובת. לא משנה מאיזה סוג המערך...




הסבר מה זה:

virtual
פונקציה שניתנת לדריסה

override
פונקציה שדורסת פונקציה מהמחלקת-אב המוגדרת וירטואלית

new
אע"פ שהפונקציה במחלקת-אב לא מוגדרת כוירטואלית - אני (במחלקת הבן) רוצה לדרוס אותה



תן דוגמה אחת מהעולם האמיתי בה "המחלקת בסיס" עושה פעולה בצורה כלשהי 
והתת-קטגוריה שלה מממשת את אותה פעולה בצורה שונה.

בעל חיים אוכל - לועס את האוכל ואז בולע
נחש - אין לו שיניים ולכן הוא לא לועס אלא בולע את האוכל בשלמות
